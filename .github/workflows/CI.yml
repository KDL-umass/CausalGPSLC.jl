name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  # build:
#     name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: true
#       matrix:
#         version:
#           - '^1.7'
#         os:
#           - ubuntu-latest
#         arch:
#           - x64
#     steps:
#       - uses: actions/checkout@v2
#       - uses: julia-actions/setup-julia@v1
#         with:
#           version: ${{ matrix.version }}
#           arch: ${{ matrix.arch }}
#           show-versioninfo: true
#       - uses: julia-actions/julia-buildpkg@v1
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        version:
          - '^1.7'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - run: JULIA_NUM_THREADS=2
      # - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
        with:
          coverage: 'true'
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v3.0.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          file: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.7'
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
          ACTIONS_KEY: ${{ secrets.ACTIONS_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using GPSLC
            DocMeta.setdocmeta!(GPSLC, :DocTestSetup, :(using GPSLC); recursive=true)
            doctest(GPSLC)'
  # codecov:
  #   name: Codecov
  #   steps:
  #     - uses: codecov/codecov-action@v3.0.0
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
  #         # files: ./coverage1.xml,./coverage2.xml # optional
  #         run: 
  #         after_success:
  #           - julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; Codecov.submit(process_folder())'
  #         flags: unittests # optional
  #         name: codecov-umbrella # optional
  #         fail_ci_if_error: true # optional (default = false)
  #         verbose: true # optional (default = false)

  # # add nightly that pulls latest versions of dependencies