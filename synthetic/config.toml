[data]
    # the total number of data to generate
    n = 100

    # Sigma U
    obj_size = 10
    eps = 1e-13
    ucov = 0.9

    # Sigma X
    xdim = 1
    xvar = 1.0

    # noise for u, t, x, y (assuming Gaussian additive)
    uNoise = 0.1
    xNoise = 1.0
    tNoise = 0.1
    yNoise = 0.1

    # this field change the data type: polynomial, sinusoidal, exponential
    XTAssignment = ["polynomial"]
    UTAssignment = ["polynomial"]
    TaggOp = "+"    # if "+", T = g(X) + h(U) else g(X) * h(U)
    XYAssignment = ["polynomial"]
    TYAssignment = ["polynomial", "sinusoidal"] # you can stuck multiple function (X [TYOp] sin(X))
    UYAssignment = ["polynomial"]
    YaggOp = "*"    # if "+", Y = f(T) + g(X) + h(U) else f(T) * g(X) * h(U)

    # set this
    Ttype = "binary" # {continuous, binary}

    [data.XTparams]
        aggOp = "+"              # aggregation when there are multiple transformation
        poly = [0.0, 1.0]        # poly[1] + poly[2] * X + poly[3] * X^2 + ... +
        exp = [0.0, 1.0, 1.0]    # exp[1] + exp[2] * exp(exp[3] * X)
        sin = [0.0, 2.5, 2.0]    # sin[1] + sin[2] * sin(sin[3] * X)

    [data.UTparams]
        aggOp = "+"
        poly = [0.0, 1.0]
        exp = [0.0, 0.5, 1.0]
        sin = [0.0, 1.0, 1.0]

    [data.XYparams]
        aggOp = "+"
        poly = [1.0]
        exp = [0.5, 1.0]
        sin = [1.0, 2.0]

    [data.TYparams]
        aggOp = "+"
        poly = [1.0, 1.0]
        exp = [0.0, 0.5, 1.0]
        sin = [0.0, 1.5, 2.0]

    [data.UYparams]
        aggOp = "+"
        poly = [0.0, 1.0]
        exp = [0.0, 0.5, 1.0]
        sin = [0.0, 1.0, 2.0]


[model]
    uxLS = 10.0
    uyLS = 10.0
    xyLS = 1.0

    xNoise = 1.0
    yNoise = 0.1