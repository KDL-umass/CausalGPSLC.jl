var documenterSearchIndex = {"docs":
[{"location":"conditionalITE/#Conditional-Individual-Treatment-Effect","page":"Conditional Individual Treatment Effect","title":"Conditional Individual Treatment Effect","text":"","category":"section"},{"location":"conditionalITE/","page":"Conditional Individual Treatment Effect","title":"Conditional Individual Treatment Effect","text":"A contribution of the original GPSLC paper is to produce accurate individual treatment effect conditioned on covariates, using inferred values of latent confounders determined by given structure.","category":"page"},{"location":"#GPSLC.jl-Documentation","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"","category":"section"},{"location":"","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"CurrentModule = GPSLC","category":"page"},{"location":"","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"samplePosterior","category":"page"},{"location":"#GPSLC.samplePosterior","page":"GPSLC.jl Documentation","title":"GPSLC.samplePosterior","text":"Draw samples from the posterior given the observed data X,T,Y.\n\nParams:\n\nX: Input covariates\nT: Input treatment\nY: Output\nSigmaU: Object structure\nhyperParams=getHyperParameters(): Hyperparameters for posterior sampling\n\nReturns:\n\nposteriorSample: samples from posterior determined by hyperparameters\n\n\n\n\n\n","category":"function"},{"location":"","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"getHyperParameters","category":"page"},{"location":"#GPSLC.getHyperParameters","page":"GPSLC.jl Documentation","title":"GPSLC.getHyperParameters","text":"Hyperparameters\n\nDefaults are those used in original paper, listed here for modification\n\nuNoiseShape::Float64=4.0: shape parameter of the InvGamma prior over the noise of U\nuNoiseScale::Float64=4.0: scale parameter of the InvGamma prior over the noise of U\nxNoiseShape::Float64=4.0: shape parameter of the InvGamma prior over the noise of X\nxNoiseScale::Float64=4.0: scale parameter of the InvGamma prior over the noise of X\ntNoiseShape::Float64=4.0: shape parameter of the InvGamma prior over the noise of T\ntNoiseScale::Float64=4.0: scale parameter of the InvGamma prior over the noise of T\nyNoiseShape::Float64=4.0: shape parameter of the InvGamma prior over the noise of Y\nyNoiseScale::Float64=4.0: scale parameter of the InvGamma prior over the noise of Y\nxScaleShape::Float64=4.0: shape parameter of the InvGamma prior over kernel scale of X\nxScaleScale::Float64=4.0: scale parameter of the InvGamma prior over kernel scale of X\ntScaleShape::Float64=4.0: shape parameter of the InvGamma prior over kernel scale of T\ntScaleScale::Float64=4.0: scale parameter of the InvGamma prior over kernel scale of T\nyScaleShape::Float64=4.0: shape parameter of the InvGamma prior over kernel scale of Y\nyScaleScale::Float64=4.0: scale parameter of the InvGamma prior over kernel scale of Y\nuxLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of U and X\nuxLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of U and X\nutLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of U and T\nutLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of U and T\nxtLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of X and T\nxtLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of X and T\nuyLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of U and Y\nuyLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of U and Y\nxyLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of X and Y\nxyLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of X and Y\ntyLSShape::Float64=4.0: shape parameter of the InvGamma prior over kernel lengthscale of T and Y\ntyLSScale::Float64=4.0: scale parameter of the InvGamma prior over kernel lengthscale of T and Y\n\n\n\n\n\n","category":"function"},{"location":"","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"sampleITE","category":"page"},{"location":"#GPSLC.sampleITE","page":"GPSLC.jl Documentation","title":"GPSLC.sampleITE","text":"Estimate Individual Treatment Effect using GPSLC model\n\nParams:\n\nX: Input covariates\nT: Input treatment\nY: Output\nSigmaU: Object structure\nposteriorSample=samplePosterior(X,T,Y,SigmaU): Samples of parameters from posterior\n\nReturns:\n\nITEsamples: n x m matrix where n is the number of data, and m is the number of samples\n\n\n\n\n\n","category":"function"},{"location":"","page":"GPSLC.jl Documentation","title":"GPSLC.jl Documentation","text":"summarizeITE","category":"page"},{"location":"#GPSLC.summarizeITE","page":"GPSLC.jl Documentation","title":"GPSLC.summarizeITE","text":"Create dataframe of mean, lower and upper quantiles of the ITE samples.\n\nParams:\n\nITEsamples: n x m array of ITE samples\nsavetofile: Optionally save the resultant dataframe as CSV to the filename passed.\n\nReturns:\n\ndf: Dataframe of Individual, Mean, LowerBound, and UpperBound values for the samples.\n\n\n\n\n\n","category":"function"}]
}
